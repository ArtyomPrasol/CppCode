#include <stdio.h>
#include "mpi.h"
#include <stdio.h>
#include <fstream>
#include <iostream>
#include <string>

using namespace std;

//mpiexec -n 8 D:\Work\PiN_Kode\2ind\x64\Debug\2ind.exe

int main(int argc, char **argv) {
	ofstream fout;
	ifstream fin;


	int rank, numtasks, n = rand() % 19 + 1;
	srand(time(NULL));
	string t = "file", tag = ".txt", r = "_res", way = "D:\\Work\\PiN_Kode\\2ind\\x64\\Debug\\";
	MPI_Status status;

	MPI_Init(&argc, &argv);
	MPI_Comm_size(MPI_COMM_WORLD, &numtasks);
	MPI_Comm_rank(MPI_COMM_WORLD, &rank);

	int mas[50];
	if (rank == 0)
	{
		for (int i = 0; i < n; i++)
			mas[i] = i;
		for (int i = 0; i < n; i++)
		{
			fout.open(way + t + to_string(i) + tag);
			for (int i = 0; i < n; i++)
			{
				int d = (rand() % 19 + 1)*pow(-1,rand()%2);
				fout << d << endl;
			}
			fout.close();
		}
		cout << "Created mas and files" << endl;
	}

	MPI_Bcast(mas, 50, MPI_INT, 0, MPI_COMM_WORLD);
	

	for (int i = rank; i < n; i += numtasks)
	{
		int x, p = 1;
		fin.open(way + t + to_string(i) + tag);
		while (fin >> x && !fin.eof()) {
			if (x < 0) p *= x;
		}
		fin.close();
		fout.open(way + t + to_string(i) + r + tag);
		fout << p << endl;
		fout.close();
	}
	cout << "Done" << endl;

	MPI_Finalize();
	return 0;
}
